{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thane\\\\Desktop\\\\WINTER 2025\\\\SOEN 487\\\\Assignments\\\\A1.2\\\\frontend-react\\\\src\\\\components\\\\StudentList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_STUDENTS = gql`\n  query GetStudents($departmentId: ID!) {\n    studentsByDepartment(departmentId: $departmentId) {\n      id\n      first_name\n      last_name\n      student_id\n      address\n    }\n  }\n`;\nconst StudentList = ({\n  departmentId\n}) => {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_STUDENTS, {\n    variables: {\n      departmentId\n    },\n    skip: !departmentId\n  });\n  if (!departmentId) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Please select a department to view students.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 31\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading students...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error loading students.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    border: \"1\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Student ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.students.map(student => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: student.first_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: student.last_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: student.student_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: student.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, student.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(StudentList, \"ATRudwUnWENk7lEGiyv3yjumjxE=\", false, function () {\n  return [useQuery];\n});\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useQuery","gql","jsxDEV","_jsxDEV","GET_STUDENTS","StudentList","departmentId","_s","loading","error","data","variables","skip","children","fileName","_jsxFileName","lineNumber","columnNumber","border","students","map","student","first_name","last_name","student_id","address","id","_c","$RefreshReg$"],"sources":["C:/Users/thane/Desktop/WINTER 2025/SOEN 487/Assignments/A1.2/frontend-react/src/components/StudentList.js"],"sourcesContent":["import React from \"react\";\r\nimport {useQuery, gql} from \"@apollo/client\";\r\n\r\nconst GET_STUDENTS = gql`\r\n  query GetStudents($departmentId: ID!) {\r\n    studentsByDepartment(departmentId: $departmentId) {\r\n      id\r\n      first_name\r\n      last_name\r\n      student_id\r\n      address\r\n    }\r\n  }\r\n`;\r\n\r\nconst StudentList = ({departmentId}) => {\r\n    const {loading, error, data} = useQuery(GET_STUDENTS,{\r\n    variables: {departmentId},\r\n    skip: !departmentId\r\n    });\r\n\r\n    if (!departmentId) return <p>Please select a department to view students.</p>\r\n    if (loading) return <p>Loading students...</p>\r\n    if (error) return <p>Error loading students.</p>\r\n\r\n    return(\r\n        <table border=\"1\">\r\n        <thead>\r\n        <tr>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Student ID</th>\r\n            <th>Address</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {data.students.map((student)=>(\r\n            <tr key={student.id}>\r\n                <td>{student.first_name}</td>\r\n                <td>{student.last_name}</td>\r\n                <td>{student.student_id}</td>\r\n                <td>{student.address}</td>\r\n            </tr>\r\n        ))}\r\n        </tbody>\r\n        </table>\r\n    );\r\n\r\n};\r\n\r\nexport default StudentList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}